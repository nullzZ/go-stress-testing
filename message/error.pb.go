// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: msg/error.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_NULL                      ErrorCode = 0
	ErrorCode_ERROR_CODE_OK                        ErrorCode = 1
	ErrorCode_ERROR_SERVER                         ErrorCode = 100  //服务器异常
	ErrorCode_ERROR_AUTH                           ErrorCode = 101  //请登录
	ErrorCode_ERROR_TOKEN                          ErrorCode = 102  //token失效
	ErrorCode_ERROR_RE_LOGIN                       ErrorCode = 103  //重复登录
	ErrorCode_ERROR_ACCOUNT_ERR                    ErrorCode = 104  //账号不存在
	ErrorCode_ERROR_PM_CONF_ERROR                  ErrorCode = 105  //配置文件错误
	ErrorCode_ERROR_CLIENT_PARMA_ERROR             ErrorCode = 106  //客户端参数异常
	ErrorCode_ERROR_FUNCTION_NO_OPEN               ErrorCode = 107  //功能没有开启
	ErrorCode_ERROR_ITEM_NOT_EXIST                 ErrorCode = 1001 //物品不存在
	ErrorCode_ERROR_ITEM_NOT_ENOUGH                ErrorCode = 1002 //物品不足够
	ErrorCode_ERROR_BAG_NOT_ENOUGH                 ErrorCode = 1003 //背包空间不足
	ErrorCode_ERROR_ITEM_XLSX_NOT_EXIST            ErrorCode = 1004 //道具不存在（配置）
	ErrorCode_ERROR_ELEMENT_LV_MAX                 ErrorCode = 1100 //地上物满级
	ErrorCode_ERROR_ELEMENT_LV_DOING               ErrorCode = 1101 //地上物正在升级中
	ErrorCode_ERROR_TITLE_UNLOCKED                 ErrorCode = 1102 //地块已经解锁
	ErrorCode_ERROR_TITLE_UNLOCK_CONDITION         ErrorCode = 1103 //地块未满足解锁条件
	ErrorCode_ERROR_ELEMENT_ITEM_NOT_EXIST         ErrorCode = 1104 //地上物物品不存在
	ErrorCode_ERROR_ELEMENT_ITEM_PUT_IN_MAP        ErrorCode = 1105 //放在地图上错误
	ErrorCode_ERROR_ELEMENT_LEVEL_UP_FINISH        ErrorCode = 1106 //领取升级奖励时间没到
	ErrorCode_ERROR_ELEMENT_NOT_LEVEL_UP           ErrorCode = 1107 //不可以升级
	ErrorCode_ERROR_ELEMENT_MAKE_ITEM_NO_GRID      ErrorCode = 1108 //制作道具，格子不足
	ErrorCode_ERROR_ELEMENT_MAKE_ITEM_BUY_GRID_MAX ErrorCode = 1109 //制作道具，购买格子数达到上限
	ErrorCode_ERROR_ELEMENT_MAKE_ITEM_BUY_COST_NO  ErrorCode = 1110 //制作道具，购买格子 消耗不足
	ErrorCode_ERROR_MAP_NOT_EXIST                  ErrorCode = 1111 //mapId错误，地图不存在
	ErrorCode_ERROR_MAP_SHOP_BUY_MAX               ErrorCode = 1112 //地图商店购买超过最大数量限制
	ErrorCode_ERROR_WORKER_MAX                     ErrorCode = 1113 //工人已满
	ErrorCode_ERROR_BUILDING_NO_OPERATE            ErrorCode = 1114 //建筑不允许操作
	ErrorCode_ERROR_ELEMENT_OBSTACLE_FINISH_TIME   ErrorCode = 1115 //障碍物时间
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "ERROR_CODE_NULL",
		1:    "ERROR_CODE_OK",
		100:  "ERROR_SERVER",
		101:  "ERROR_AUTH",
		102:  "ERROR_TOKEN",
		103:  "ERROR_RE_LOGIN",
		104:  "ERROR_ACCOUNT_ERR",
		105:  "ERROR_PM_CONF_ERROR",
		106:  "ERROR_CLIENT_PARMA_ERROR",
		107:  "ERROR_FUNCTION_NO_OPEN",
		1001: "ERROR_ITEM_NOT_EXIST",
		1002: "ERROR_ITEM_NOT_ENOUGH",
		1003: "ERROR_BAG_NOT_ENOUGH",
		1004: "ERROR_ITEM_XLSX_NOT_EXIST",
		1100: "ERROR_ELEMENT_LV_MAX",
		1101: "ERROR_ELEMENT_LV_DOING",
		1102: "ERROR_TITLE_UNLOCKED",
		1103: "ERROR_TITLE_UNLOCK_CONDITION",
		1104: "ERROR_ELEMENT_ITEM_NOT_EXIST",
		1105: "ERROR_ELEMENT_ITEM_PUT_IN_MAP",
		1106: "ERROR_ELEMENT_LEVEL_UP_FINISH",
		1107: "ERROR_ELEMENT_NOT_LEVEL_UP",
		1108: "ERROR_ELEMENT_MAKE_ITEM_NO_GRID",
		1109: "ERROR_ELEMENT_MAKE_ITEM_BUY_GRID_MAX",
		1110: "ERROR_ELEMENT_MAKE_ITEM_BUY_COST_NO",
		1111: "ERROR_MAP_NOT_EXIST",
		1112: "ERROR_MAP_SHOP_BUY_MAX",
		1113: "ERROR_WORKER_MAX",
		1114: "ERROR_BUILDING_NO_OPERATE",
		1115: "ERROR_ELEMENT_OBSTACLE_FINISH_TIME",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_NULL":                      0,
		"ERROR_CODE_OK":                        1,
		"ERROR_SERVER":                         100,
		"ERROR_AUTH":                           101,
		"ERROR_TOKEN":                          102,
		"ERROR_RE_LOGIN":                       103,
		"ERROR_ACCOUNT_ERR":                    104,
		"ERROR_PM_CONF_ERROR":                  105,
		"ERROR_CLIENT_PARMA_ERROR":             106,
		"ERROR_FUNCTION_NO_OPEN":               107,
		"ERROR_ITEM_NOT_EXIST":                 1001,
		"ERROR_ITEM_NOT_ENOUGH":                1002,
		"ERROR_BAG_NOT_ENOUGH":                 1003,
		"ERROR_ITEM_XLSX_NOT_EXIST":            1004,
		"ERROR_ELEMENT_LV_MAX":                 1100,
		"ERROR_ELEMENT_LV_DOING":               1101,
		"ERROR_TITLE_UNLOCKED":                 1102,
		"ERROR_TITLE_UNLOCK_CONDITION":         1103,
		"ERROR_ELEMENT_ITEM_NOT_EXIST":         1104,
		"ERROR_ELEMENT_ITEM_PUT_IN_MAP":        1105,
		"ERROR_ELEMENT_LEVEL_UP_FINISH":        1106,
		"ERROR_ELEMENT_NOT_LEVEL_UP":           1107,
		"ERROR_ELEMENT_MAKE_ITEM_NO_GRID":      1108,
		"ERROR_ELEMENT_MAKE_ITEM_BUY_GRID_MAX": 1109,
		"ERROR_ELEMENT_MAKE_ITEM_BUY_COST_NO":  1110,
		"ERROR_MAP_NOT_EXIST":                  1111,
		"ERROR_MAP_SHOP_BUY_MAX":               1112,
		"ERROR_WORKER_MAX":                     1113,
		"ERROR_BUILDING_NO_OPERATE":            1114,
		"ERROR_ELEMENT_OBSTACLE_FINISH_TIME":   1115,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_error_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_msg_error_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_msg_error_proto_rawDescGZIP(), []int{0}
}

var File_msg_error_proto protoreflect.FileDescriptor

var file_msg_error_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0xea, 0x06, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x64, 0x12, 0x0e,
	0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x66, 0x12,
	0x12, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x10, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x50, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x69, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x4d, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x6a, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x6b, 0x12, 0x19, 0x0a,
	0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe9, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47,
	0x48, 0x10, 0xea, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x42, 0x41,
	0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xeb, 0x07, 0x12,
	0x1e, 0x0a, 0x19, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x58, 0x4c,
	0x53, 0x58, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xec, 0x07, 0x12,
	0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4c, 0x56, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0xcc, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x56, 0x5f, 0x44,
	0x4f, 0x49, 0x4e, 0x47, 0x10, 0xcd, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0xce, 0x08, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x49, 0x54, 0x4c,
	0x45, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0xcf, 0x08, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd0, 0x08, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x50,
	0x55, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0xd1, 0x08, 0x12, 0x22, 0x0a, 0x1d,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0xd2, 0x08,
	0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x10, 0xd3,
	0x08, 0x12, 0x24, 0x0a, 0x1f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x5f,
	0x47, 0x52, 0x49, 0x44, 0x10, 0xd4, 0x08, 0x12, 0x29, 0x0a, 0x24, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x47, 0x52, 0x49, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x10,
	0xd5, 0x08, 0x12, 0x28, 0x0a, 0x23, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x42, 0x55,
	0x59, 0x5f, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x10, 0xd6, 0x08, 0x12, 0x18, 0x0a, 0x13,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0xd7, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x4d, 0x41, 0x50, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x4d, 0x41, 0x58,
	0x10, 0xd8, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x4f, 0x52,
	0x4b, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0xd9, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0xda, 0x08, 0x12, 0x27, 0x0a, 0x22, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x53, 0x54,
	0x41, 0x43, 0x4c, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0xdb, 0x08, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_error_proto_rawDescOnce sync.Once
	file_msg_error_proto_rawDescData = file_msg_error_proto_rawDesc
)

func file_msg_error_proto_rawDescGZIP() []byte {
	file_msg_error_proto_rawDescOnce.Do(func() {
		file_msg_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_error_proto_rawDescData)
	})
	return file_msg_error_proto_rawDescData
}

var file_msg_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msg_error_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: msg.ErrorCode
}
var file_msg_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_msg_error_proto_init() }
func file_msg_error_proto_init() {
	if File_msg_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_error_proto_goTypes,
		DependencyIndexes: file_msg_error_proto_depIdxs,
		EnumInfos:         file_msg_error_proto_enumTypes,
	}.Build()
	File_msg_error_proto = out.File
	file_msg_error_proto_rawDesc = nil
	file_msg_error_proto_goTypes = nil
	file_msg_error_proto_depIdxs = nil
}
